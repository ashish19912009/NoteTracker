{"version":3,"sources":["components/AppBar.js","components/NoteForm.js","components/showDataTable.js","components/NoteTabs.js","views/Home.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","classes","className","AppBar","position","color","Toolbar","IconButton","edge","aria-label","Typography","variant","margin","width","BasicTextFields","props","useState","noteTitle","setNoteTitle","noteStatus","setNoteStatus","useEffect","console","log","noValidate","autoComplete","style","textAlign","TextField","id","label","onChange","event","target","value","Button","size","onClick","updateNoteData","toUpperCase","alert","backgroundColor","TabPanel","children","index","other","role","hidden","aria-labelledby","Box","p","ShowDataTable","tableData","length","map","el","key","dateTime","toString","data-testid","status","a11yProps","ScrollableTabsButtonAuto","React","setValue","allNoteData","allStatus","getAllStatus","temp","findIndex","element","Object","keys","obj","push","find","e","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","i","Math","random","Home","noteAll","setNoteAll","Fragment","Grid","container","item","xs","paddingTop","Date","titles","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.83b09429.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color='primary'>\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Note Recorder App\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React,{useEffect, useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\nexport default function BasicTextFields(props) {\n  const classes = useStyles();\n\n  const [noteTitle, setNoteTitle] = useState('');\n  const [noteStatus, setNoteStatus] = useState('');\n\n  useEffect(()=>{\n      console.log(\"Updating Note Form\");\n  },[noteTitle || noteStatus]);\n\n  const noteTitleChangeHandler = (event) => {\n      \n    setNoteTitle(event.target.value)\n  }\n\n  const noteStatusChangeHandler = (event) => {\n    setNoteStatus(event.target.value)\n  }\n\n  const updateNoteProps = () => {\n    if(noteTitle !== '' && noteStatus !== '')\n      {\n        props.updateNoteData(noteTitle, noteStatus.toUpperCase());\n        setNoteTitle('');\n        setNoteStatus('');\n      } else{\n        alert(\"Please enter all fields\");\n      }\n  }\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\" style={{textAlign:'center'}}>\n      <TextField id=\"standard-basic\" label=\"Standard\" onChange={noteTitleChangeHandler} value={noteTitle}/>\n      <TextField id=\"standard-basic\" label=\"Standard\" onChange={noteStatusChangeHandler} value={noteStatus}/>\n      <Button variant=\"contained\" color=\"primary\" size=\"large\" onClick={updateNoteProps} style={{backgroundColor:'#e65100'}}>\n        Primary\n      </Button>\n    </form>\n  );\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport PropTypes from 'prop-types';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`scrollable-auto-tabpanel-${index}`}\n        aria-labelledby={`scrollable-auto-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box p={3}>\n            <Typography>{children}</Typography>\n          </Box>\n        )}\n      </div>\n    );\n  }\n  \n  TabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n  };\n\nconst ShowDataTable = (props) => {\n    return (\n        <TabPanel value={props.value} index={props.index}>\n            <table style={{width:'100%'}}>\n                <thead>\n                <tr>\n                  <th>Title</th>\n                  <th>Status</th>\n                </tr>\n                </thead>\n        {props.tableData.length > 0 && props.tableData.map(el => {\n           return  <tbody key={el.dateTime.toString()} data-testid=\"noteList\" style={{textAlign:'center'}}>\n                            <tr>\n                                <td>{el.title}</td>\n                                <td>{el.status}</td>\n                            </tr>\n                            </tbody>\n                })\n        }\n        </table>\n        </TabPanel>)\n};\n\nexport default ShowDataTable;","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport ShowTable from '../components/showDataTable';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: '100%',\n    backgroundColor: '#e0e0e0',\n  },\n}));\n\nexport default function ScrollableTabsButtonAuto(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const [allStatus, getAllStatus] = useState([...props.allNoteData]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  useEffect(()=>{\n    const temp = [];\n\n    if(props.allNoteData.length > 0){\n    props.allNoteData.map(el => {\n      if(temp.findIndex((element) => Object.keys(element)[0] === el.status) === -1)\n      {\n        var obj = {};\n        obj[el.status] = [];\n        temp.push(obj);  \n      }\n    });\n   props.allNoteData.map(el => {\n    temp.find((e) => {\n       if(Object.keys(e)[0] === el.status)\n         {\n           e[Object.keys(e)[0]].push({...el});\n         }\n     })\n   });\n  }  \n  getAllStatus(temp);\n\n  },[props.allNoteData]);\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          aria-label=\"scrollable auto tabs example\"\n        >\n          <Tab label=\"All\" {...a11yProps(0)} />\n          {\n            allStatus.length > 0 && allStatus.map((el,i) => {\n              return <Tab key={`${el.title}${Math.random(10).toString()}`} label={Object.keys(el)[0]} {...a11yProps(i+1)} />\n            })\n          }\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n      <table style={{width:'100%'}} value={value} index={0}>\n      <thead>\n      {props.allNoteData.length > 0 ? <tr>\n        <th>Title</th>\n        <th>Status</th>\n      </tr> : <p style={{textAlign:'center'}}>No Data to Show</p>}\n      \n      </thead>\n      <tbody data-testid=\"noteList\" style={{textAlign:'center'}}>\n        \n        {props.allNoteData.length > 0 && props.allNoteData.map(el => {\n          return (<tr key={el.dateTime.toString()}>\n            <td>{el.title}</td>\n            <td>{el.status}</td>\n          </tr>) \n        })}\n      </tbody>\n    </table>\n      </TabPanel>\n      {\n        allStatus.length > 0 && allStatus.map((element,i) => {\n          return <ShowTable key={`${Object.keys(element)[0]}${Math.random(10).toString()}`} tableData={element[Object.keys(element)[0]]} value={value} index={i+1}/>    \n        })\n      }\n    </div>\n  );\n}\n","import React, {useState, useEffect} from 'react';\nimport AppHeader from '../components/AppBar';\nimport Grid from '@material-ui/core/Grid';\nimport NoteForm from '../components/NoteForm';\nimport NoteTab from '../components/NoteTabs';\nconst Home = () => {\n    const [noteAll, setNoteAll] = useState([]);\n\n    useEffect(()=> console.log(\"App Started\"),[noteAll]);\n\n    const updateNoteDataHandler = (title, status) => {\n        const temp = {\n            title: title,\n            status: status,\n            dateTime: new Date()\n        }\n        setNoteAll((titles)=>{\n\n            return [\n                ...titles,\n                temp\n            ]\n        });\n    }\n\n    return(<React.Fragment>\n            <AppHeader/>\n            <Grid container item xs={12} spacing={3} style={{paddingTop:'30px'}}>\n        <Grid item xs={8} style={{margin:'auto', backgroundColor:'#f0f4c3'}}>\n            <NoteForm updateNoteData = {updateNoteDataHandler}/>\n        </Grid>\n        <Grid item xs={8} style={{margin:'auto', paddingTop:'30px'}}>\n            <NoteTab allNoteData={noteAll}/>\n        </Grid>\n      </Grid>\n        </React.Fragment>);\n}\n\nexport default Home;","import React from 'react';\nimport Home from './views/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));\n"],"sourceRoot":""}